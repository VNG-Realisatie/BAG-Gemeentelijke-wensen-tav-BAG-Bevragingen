"""
    Huidige bevragingen API

    Deze API levert actuele gegevens over adressen, adresseerbare objecten en panden. Actueel betekent in deze API `zonder eindstatus`. De bron voor deze API is de basisregistratie adressen en gebouwen (BAG).  # noqa: E501

    The version of the OpenAPI document: 1.1.0
    Contact: bag@kadaster.nl
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.adres_hal import AdresHal
from openapi_client.model.adres_hal_collectie import AdresHalCollectie
from openapi_client.model.bad_request_foutbericht import BadRequestFoutbericht
from openapi_client.model.foutbericht import Foutbericht
from openapi_client.model.nummeraanduiding_hal_basis import NummeraanduidingHalBasis
from openapi_client.model.openbare_ruimte_hal_basis import OpenbareRuimteHalBasis
from openapi_client.model.woonplaats_hal import WoonplaatsHal
from openapi_client.model.zoek_resultaat_hal_collectie import ZoekResultaatHalCollectie


class AdresApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __raadpleeg_adres_met_num_id(
            self,
            nummeraanduidingidentificatie,
            **kwargs
        ):
            """levert een adres  # noqa: E501

            Raadpleeg een actueel adres met de nummeraanduidingidentificatie. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). Gebruik de expand-parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources nummeraanduiding, woonplaats en openbare ruimte, zie [functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/expand.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_adres_met_num_id(nummeraanduidingidentificatie, async_req=True)
            >>> result = thread.get()

            Args:
                nummeraanduidingidentificatie (str): Identificatie van een nummeraanduiding uit de BAG. Deze is 16 cijfers lang.

            Keyword Args:
                expand (str): Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/expand.feature).. [optional]
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                AdresHal
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['nummeraanduidingidentificatie'] = \
                nummeraanduidingidentificatie
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_adres_met_num_id = _Endpoint(
            settings={
                'response_type': (AdresHal,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/adressen/{nummeraanduidingidentificatie}',
                'operation_id': 'raadpleeg_adres_met_num_id',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'nummeraanduidingidentificatie',
                    'expand',
                    'fields',
                ],
                'required': [
                    'nummeraanduidingidentificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'nummeraanduidingidentificatie',
                ]
            },
            root_map={
                'validations': {
                    ('nummeraanduidingidentificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'nummeraanduidingidentificatie':
                        (str,),
                    'expand':
                        (str,),
                    'fields':
                        (str,),
                },
                'attribute_map': {
                    'nummeraanduidingidentificatie': 'nummeraanduidingidentificatie',
                    'expand': 'expand',
                    'fields': 'fields',
                },
                'location_map': {
                    'nummeraanduidingidentificatie': 'path',
                    'expand': 'query',
                    'fields': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_adres_met_num_id
        )

        def __raadpleeg_adressen(
            self,
            **kwargs
        ):
            """vindt adressen  # noqa: E501

            Vind een actueel adres met de identificatie van het zoekresultaat uit de operatie get /adressen/zoek, de pandidentificatie of de adresseerbaarobjectidentificatie. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). Gebruik de expand-parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources nummeraanduiding, woonplaats en openbare ruimte, zie [functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/expand.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_adressen(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                pand_identificatie (str): Identificatie van een pand uit de BAG. Deze is 16 cijfers lang.. [optional]
                adresseerbaar_object_identificatie (str): De identificatie van een adresseerbaar object uit de BAG. Deze is 16 cijfers lang en kan een verblijfsobject, een standplaats of een ligplaats zijn.. [optional]
                zoekresultaat_identificatie (str): De identificatie van een zoekresultaat van het endpoint get /adressen/zoek.. [optional]
                expand (str): Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/expand.feature).. [optional]
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                page (int): Pagina nummer. [optional] if omitted the server will use the default value of 1
                page_size (int): [optional] if omitted the server will use the default value of 20
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                AdresHalCollectie
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_adressen = _Endpoint(
            settings={
                'response_type': (AdresHalCollectie,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/adressen',
                'operation_id': 'raadpleeg_adressen',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pand_identificatie',
                    'adresseerbaar_object_identificatie',
                    'zoekresultaat_identificatie',
                    'expand',
                    'fields',
                    'page',
                    'page_size',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pand_identificatie',
                    'adresseerbaar_object_identificatie',
                    'page',
                    'page_size',
                ]
            },
            root_map={
                'validations': {
                    ('pand_identificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                    ('adresseerbaar_object_identificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                    ('page',): {

                        'inclusive_minimum': 1,
                    },
                    ('page_size',): {

                        'inclusive_maximum': 100,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pand_identificatie':
                        (str,),
                    'adresseerbaar_object_identificatie':
                        (str,),
                    'zoekresultaat_identificatie':
                        (str,),
                    'expand':
                        (str,),
                    'fields':
                        (str,),
                    'page':
                        (int,),
                    'page_size':
                        (int,),
                },
                'attribute_map': {
                    'pand_identificatie': 'pandIdentificatie',
                    'adresseerbaar_object_identificatie': 'adresseerbaarObjectIdentificatie',
                    'zoekresultaat_identificatie': 'zoekresultaatIdentificatie',
                    'expand': 'expand',
                    'fields': 'fields',
                    'page': 'page',
                    'page_size': 'pageSize',
                },
                'location_map': {
                    'pand_identificatie': 'query',
                    'adresseerbaar_object_identificatie': 'query',
                    'zoekresultaat_identificatie': 'query',
                    'expand': 'query',
                    'fields': 'query',
                    'page': 'query',
                    'page_size': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_adressen
        )

        def __raadpleeg_nummeraanduiding(
            self,
            nummeraanduidingidentificatie,
            **kwargs
        ):
            """levert BAG details van een nummeraanduiding  # noqa: E501

            Raadpleeg een actuele nummeraanduiding met de identificatie. Een nummeraanduiding is een postcode, huisnummer met evt een huisletter en huisnummertoevoeging die hoort bij een verblijfsobject, een standplaats of een ligplaats. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_nummeraanduiding(nummeraanduidingidentificatie, async_req=True)
            >>> result = thread.get()

            Args:
                nummeraanduidingidentificatie (str): Identificatie van een nummeraanduiding uit de BAG. Deze is 16 cijfers lang.

            Keyword Args:
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                NummeraanduidingHalBasis
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['nummeraanduidingidentificatie'] = \
                nummeraanduidingidentificatie
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_nummeraanduiding = _Endpoint(
            settings={
                'response_type': (NummeraanduidingHalBasis,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/nummeraanduidingen/{nummeraanduidingidentificatie}',
                'operation_id': 'raadpleeg_nummeraanduiding',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'nummeraanduidingidentificatie',
                    'fields',
                ],
                'required': [
                    'nummeraanduidingidentificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'nummeraanduidingidentificatie',
                ]
            },
            root_map={
                'validations': {
                    ('nummeraanduidingidentificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'nummeraanduidingidentificatie':
                        (str,),
                    'fields':
                        (str,),
                },
                'attribute_map': {
                    'nummeraanduidingidentificatie': 'nummeraanduidingidentificatie',
                    'fields': 'fields',
                },
                'location_map': {
                    'nummeraanduidingidentificatie': 'path',
                    'fields': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_nummeraanduiding
        )

        def __raadpleeg_openbare_ruimte(
            self,
            openbareruimteidentificatie,
            **kwargs
        ):
            """levert BAG detals van een openbare ruimte  # noqa: E501

            Raadpleeg een actuele openbare ruimte met de identificatie. Een openbare ruimte is een buitenruimte met een naam die binnen één woonplaats ligt, bijvoorbeeld een straat of een plein. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_openbare_ruimte(openbareruimteidentificatie, async_req=True)
            >>> result = thread.get()

            Args:
                openbareruimteidentificatie (str): Identificatie van een object uit de BAG. Deze is 16 cijfers lang.

            Keyword Args:
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                OpenbareRuimteHalBasis
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['openbareruimteidentificatie'] = \
                openbareruimteidentificatie
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_openbare_ruimte = _Endpoint(
            settings={
                'response_type': (OpenbareRuimteHalBasis,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/openbareruimten/{openbareruimteidentificatie}',
                'operation_id': 'raadpleeg_openbare_ruimte',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'openbareruimteidentificatie',
                    'fields',
                ],
                'required': [
                    'openbareruimteidentificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'openbareruimteidentificatie',
                ]
            },
            root_map={
                'validations': {
                    ('openbareruimteidentificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'openbareruimteidentificatie':
                        (str,),
                    'fields':
                        (str,),
                },
                'attribute_map': {
                    'openbareruimteidentificatie': 'openbareruimteidentificatie',
                    'fields': 'fields',
                },
                'location_map': {
                    'openbareruimteidentificatie': 'path',
                    'fields': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_openbare_ruimte
        )

        def __raadpleeg_woonplaats(
            self,
            woonplaatsidentificatie,
            **kwargs
        ):
            """levert BAG details van een woonplaats  # noqa: E501

            Raadpleeg een actuele woonplaats met de identificatie. Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). Gebruik de expand-parameter als je het antwoord wil uitbreiden met de gerelateerde resource geometrie, zie [functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/expand.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_woonplaats(woonplaatsidentificatie, async_req=True)
            >>> result = thread.get()

            Args:
                woonplaatsidentificatie (str): Identificatie van een object uit de BAG. Deze is 4 cijfers lang.

            Keyword Args:
                expand (str): Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/expand.feature).. [optional]
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                accept_crs (str): Gewenste CRS van de coördinaten in de response.. [optional] if omitted the server will use the default value of "epsg:28992"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                WoonplaatsHal
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['woonplaatsidentificatie'] = \
                woonplaatsidentificatie
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_woonplaats = _Endpoint(
            settings={
                'response_type': (WoonplaatsHal,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/woonplaatsen/{woonplaatsidentificatie}',
                'operation_id': 'raadpleeg_woonplaats',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'woonplaatsidentificatie',
                    'expand',
                    'fields',
                    'accept_crs',
                ],
                'required': [
                    'woonplaatsidentificatie',
                ],
                'nullable': [
                ],
                'enum': [
                    'accept_crs',
                ],
                'validation': [
                    'woonplaatsidentificatie',
                ]
            },
            root_map={
                'validations': {
                    ('woonplaatsidentificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]|[0-9][1-9][0-9]{2}|[1-9][0-9]{3}$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                    ('accept_crs',): {

                        "EPSG:28992": "epsg:28992"
                    },
                },
                'openapi_types': {
                    'woonplaatsidentificatie':
                        (str,),
                    'expand':
                        (str,),
                    'fields':
                        (str,),
                    'accept_crs':
                        (str,),
                },
                'attribute_map': {
                    'woonplaatsidentificatie': 'woonplaatsidentificatie',
                    'expand': 'expand',
                    'fields': 'fields',
                    'accept_crs': 'Accept-Crs',
                },
                'location_map': {
                    'woonplaatsidentificatie': 'path',
                    'expand': 'query',
                    'fields': 'query',
                    'accept_crs': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_woonplaats
        )

        def __zoek(
            self,
            zoek,
            **kwargs
        ):
            """\"fuzzy\" zoeken van adressen  # noqa: E501

            Free query zoeken van adressen met postcode, woonplaats, straatnaam, huisnummer, huisletter, huisnummertoevoeging. Delen van de adressen in het antwoord matchen exact met jouw invoer. Je vindt een adres door de zoekresultaatidentificatie uit het antwoord te gebruiken in get /adressen  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.zoek(zoek, async_req=True)
            >>> result = thread.get()

            Args:
                zoek (str): Zoekterm op postcode, woonplaats, straatnaam, huisnummer, huisletter, huisnummertoevoeging.

            Keyword Args:
                page (int): Pagina nummer. [optional] if omitted the server will use the default value of 1
                page_size (int): [optional] if omitted the server will use the default value of 20
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                ZoekResultaatHalCollectie
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['zoek'] = \
                zoek
            return self.call_with_http_info(**kwargs)

        self.zoek = _Endpoint(
            settings={
                'response_type': (ZoekResultaatHalCollectie,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/adressen/zoek',
                'operation_id': 'zoek',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'zoek',
                    'page',
                    'page_size',
                ],
                'required': [
                    'zoek',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'page',
                    'page_size',
                ]
            },
            root_map={
                'validations': {
                    ('page',): {

                        'inclusive_minimum': 1,
                    },
                    ('page_size',): {

                        'inclusive_maximum': 100,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'zoek':
                        (str,),
                    'page':
                        (int,),
                    'page_size':
                        (int,),
                },
                'attribute_map': {
                    'zoek': 'zoek',
                    'page': 'page',
                    'page_size': 'pageSize',
                },
                'location_map': {
                    'zoek': 'query',
                    'page': 'query',
                    'page_size': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__zoek
        )
