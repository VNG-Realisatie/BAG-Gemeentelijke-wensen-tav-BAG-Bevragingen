"""
    Huidige bevragingen API

    Deze API levert actuele gegevens over adressen, adresseerbare objecten en panden. Actueel betekent in deze API `zonder eindstatus`. De bron voor deze API is de basisregistratie adressen en gebouwen (BAG).  # noqa: E501

    The version of the OpenAPI document: 1.1.0
    Contact: bag@kadaster.nl
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.bad_request_foutbericht import BadRequestFoutbericht
from openapi_client.model.foutbericht import Foutbericht
from openapi_client.model.pand_hal_basis import PandHalBasis
from openapi_client.model.pand_hal_collectie import PandHalCollectie


class PandApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __raadpleeg_pand(
            self,
            pandidentificatie,
            **kwargs
        ):
            """levert een pand  # noqa: E501

            Raadpleeg een actueel pand met de identificatie. Een pand is een bouwkundige, constructief zelfstandige eenheid die direct en duurzaam met de aarde is verbonden en betreedbaar en afsluitbaar is. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_pand(pandidentificatie, async_req=True)
            >>> result = thread.get()

            Args:
                pandidentificatie (str): Identificatie van een pand uit de BAG. Deze is 16 cijfers lang.

            Keyword Args:
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                accept_crs (str): Gewenste CRS van de coördinaten in de response.. [optional] if omitted the server will use the default value of "epsg:28992"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                PandHalBasis
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['pandidentificatie'] = \
                pandidentificatie
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_pand = _Endpoint(
            settings={
                'response_type': (PandHalBasis,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/panden/{pandidentificatie}',
                'operation_id': 'raadpleeg_pand',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pandidentificatie',
                    'fields',
                    'accept_crs',
                ],
                'required': [
                    'pandidentificatie',
                ],
                'nullable': [
                ],
                'enum': [
                    'accept_crs',
                ],
                'validation': [
                    'pandidentificatie',
                ]
            },
            root_map={
                'validations': {
                    ('pandidentificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                    ('accept_crs',): {

                        "EPSG:28992": "epsg:28992"
                    },
                },
                'openapi_types': {
                    'pandidentificatie':
                        (str,),
                    'fields':
                        (str,),
                    'accept_crs':
                        (str,),
                },
                'attribute_map': {
                    'pandidentificatie': 'pandidentificatie',
                    'fields': 'fields',
                    'accept_crs': 'Accept-Crs',
                },
                'location_map': {
                    'pandidentificatie': 'path',
                    'fields': 'query',
                    'accept_crs': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_pand
        )

        def __raadpleeg_panden(
            self,
            **kwargs
        ):
            """vindt panden  # noqa: E501

            Zoek actuele panden met de identificatie van een adresseerbaar object, nummeraanduiding of een locatie. Gebruik de fields-parameter als je alleen specifieke velden in het antwoord wil zien, zie [functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature).  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.raadpleeg_panden(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                adresseerbaar_object_identificatie (str): De identificatie van een adresseerbaar object uit de BAG. Deze is 16 cijfers lang en kan een verblijfsobject, een standplaats of een ligplaats zijn.. [optional]
                nummeraanduiding_identificatie (str): Identificatie van een nummeraanduiding uit de BAG. Deze is 16 cijfers lang.. [optional]
                locatie ([float]): Coordinaten van een locatie die als query-parameter gebruikt wordt om een object te zoeken. Let op, explode is false dus het formaat is ?locatie=194602.722,464154.308. [optional]
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature). [optional]
                accept_crs (str): Gewenste CRS van de coördinaten in de response.. [optional] if omitted the server will use the default value of "epsg:28992"
                content_crs (str): CRS van de meegegeven geometrie. epsg:28992 mapt op het RD New Nederlands coordinatenstelsel.. [optional] if omitted the server will use the default value of "epsg:28992"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                PandHalCollectie
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.raadpleeg_panden = _Endpoint(
            settings={
                'response_type': (PandHalCollectie,),
                'auth': [
                    'apiKeyBAG'
                ],
                'endpoint_path': '/panden',
                'operation_id': 'raadpleeg_panden',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'adresseerbaar_object_identificatie',
                    'nummeraanduiding_identificatie',
                    'locatie',
                    'fields',
                    'accept_crs',
                    'content_crs',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                    'accept_crs',
                    'content_crs',
                ],
                'validation': [
                    'adresseerbaar_object_identificatie',
                    'nummeraanduiding_identificatie',
                    'locatie',
                ]
            },
            root_map={
                'validations': {
                    ('adresseerbaar_object_identificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                    ('nummeraanduiding_identificatie',): {

                        'regex': {
                            'pattern': r'^[0-9]{16}$',  # noqa: E501
                        },
                    },
                    ('locatie',): {

                        'max_items': 2,
                        'min_items': 2,
                    },
                },
                'allowed_values': {
                    ('accept_crs',): {

                        "EPSG:28992": "epsg:28992"
                    },
                    ('content_crs',): {

                        "EPSG:28992": "epsg:28992"
                    },
                },
                'openapi_types': {
                    'adresseerbaar_object_identificatie':
                        (str,),
                    'nummeraanduiding_identificatie':
                        (str,),
                    'locatie':
                        ([float],),
                    'fields':
                        (str,),
                    'accept_crs':
                        (str,),
                    'content_crs':
                        (str,),
                },
                'attribute_map': {
                    'adresseerbaar_object_identificatie': 'adresseerbaarObjectIdentificatie',
                    'nummeraanduiding_identificatie': 'nummeraanduidingIdentificatie',
                    'locatie': 'locatie',
                    'fields': 'fields',
                    'accept_crs': 'Accept-Crs',
                    'content_crs': 'Content-Crs',
                },
                'location_map': {
                    'adresseerbaar_object_identificatie': 'query',
                    'nummeraanduiding_identificatie': 'query',
                    'locatie': 'query',
                    'fields': 'query',
                    'accept_crs': 'header',
                    'content_crs': 'header',
                },
                'collection_format_map': {
                    'locatie': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__raadpleeg_panden
        )
