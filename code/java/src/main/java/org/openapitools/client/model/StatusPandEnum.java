/*
 * Huidige bevragingen API
 * Deze API levert actuele gegevens over adressen, adresseerbare objecten en panden. Actueel betekent in deze API `zonder eindstatus`. De bron voor deze API is de basisregistratie adressen en gebouwen (BAG).
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: bag@kadaster.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Een codering van de verschillende waarden die de status van een pand kan aannemen.
 */
@JsonAdapter(StatusPandEnum.Adapter.class)
public enum StatusPandEnum {
  
  BOUWVERGUNNING_VERLEEND("Bouwvergunning verleend"),
  
  BOUW_GESTART("Bouw gestart"),
  
  PAND_IN_GEBRUIK_NIET_INGEMETEN_("Pand in gebruik (niet ingemeten)"),
  
  PAND_IN_GEBRUIK("Pand in gebruik"),
  
  VERBOUWING_PAND("Verbouwing pand"),
  
  SLOOPVERGUNNING_VERLEEND("Sloopvergunning verleend"),
  
  PAND_BUITEN_GEBRUIK("Pand buiten gebruik");

  private String value;

  StatusPandEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static StatusPandEnum fromValue(String value) {
    for (StatusPandEnum b : StatusPandEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<StatusPandEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final StatusPandEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public StatusPandEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return StatusPandEnum.fromValue(value);
    }
  }
}

